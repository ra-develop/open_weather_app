name: open_weather_app
description: A new Flutter project.
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.1.3 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  flutter_localizations:
    sdk: flutter

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2

  #  A state-management library that:
  #  - catches programming errors at compile time rather than at runtime
  #  - removes nesting for listening/combining objects
  #  - ensures that the code is testab
  flutter_riverpod: ^2.4.3
  hooks_riverpod: ^2.4.3

  # This Flutter plugin provides an API for querying information about an application package.
  # https://pub.dev/packages/package_info_plus
  package_info_plus: ^5.0.0

  # Wraps platform-specific persistent storage for simple data (NSUserDefaults on iOS and macOS,
  #  SharedPreferences on Android, etc.). Data may be persisted to disk asynchronously,
  #  and there is no guarantee that writes will be persisted to disk after returning,
  #  so this plugin must not be used for storing critical data.
  # https://pub.dev/packages/shared_preferences
  shared_preferences: ^2.0.6

  #  Flutter Hooks
  #  A Flutter implementation of React hooks: https://medium.com/@dan_abramov/making-sense-of-react-hooks-fdbde8803889
  #  Hooks are a new kind of object that manage the life-cycle of a Widget.
  #  They exist for one reason: increase the code-sharing between widgets by removing duplicates.
  flutter_hooks: ^0.20.2

  #  A powerful HTTP networking package for Dart/Flutter, supports Global configuration,
  #  Interceptors, FormData, Request cancellation, File uploading/downloading, Timeout,
  #  Custom adapters, Transformers, etc.
  dio: ^5.3.3

  # A Flutter geolocation plugin which provides easy access to platform specific location services
  # (FusedLocationProviderClient or if not available the LocationManager on
  #  Android and CLLocationManager on iOS).
  geolocator: ^10.1.0

  # This package provides internationalization and localization facilities, including message
  # translation, plurals and genders, date/number formatting and parsing, and bidirectional text.
  # https://pub.dev/packages/intl#-readme-tab-
  intl: ^0.18.1

  # This package allows programmers to annotate Dart objects in order to Serialize / Deserialize
  # them to / from JSON.
  # https://pub.dev/packages/dart_json_mapper
  dart_json_mapper: ^2.2.9

  #  Being able to compare objects in Dart often involves having to override the == operator as well as hashCode.
  equatable: ^2.0.5


dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0
  build_runner: ^2.4.6

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
